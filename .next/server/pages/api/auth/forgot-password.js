"use strict";(()=>{var e={};e.id=48,e.ids=[48],e.modules={3524:e=>{e.exports=require("@prisma/client")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6326:e=>{e.exports=import("resend")},6113:e=>{e.exports=require("crypto")},3242:(e,a,t)=>{t.a(e,async(e,s)=>{try{t.r(a),t.d(a,{config:()=>u,default:()=>l,routeModule:()=>c});var r=t(1802),n=t(7153),o=t(6249),i=t(3362),d=e([i]);i=(d.then?(await d)():d)[0];let l=(0,o.l)(i,"default"),u=(0,o.l)(i,"config"),c=new r.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/auth/forgot-password",pathname:"/api/auth/forgot-password",bundlePath:"",filename:""},userland:i});s()}catch(e){s(e)}})},4637:(e,a,t)=>{t.d(a,{_:()=>n});var s=t(3524);let r=globalThis,n=r.prisma??new s.PrismaClient({log:["query"]})},3362:(e,a,t)=>{t.a(e,async(e,s)=>{try{t.r(a),t.d(a,{default:()=>handler});var r=t(4637),n=t(7818),o=t(6113),i=t.n(o),d=e([n]);async function handler(e,a){if("POST"!==e.method)return a.status(405).json({message:"Method not allowed"});let{email:t}=e.body;if(!t)return a.status(400).json({message:"Email is required"});try{let e=await r._.user.findUnique({where:{email:t}});if(!e)return a.status(200).json({message:"If an account with that email exists, a password reset link has been sent."});let s=i().randomBytes(32).toString("hex"),o=new Date(Date.now()+36e5);await r._.user.update({where:{id:e.id},data:{resetToken:s,resetTokenExpiry:o}});try{await (0,n.LS)(e.email,s)}catch(e){return console.error("Failed to send password reset email:",e),a.status(500).json({message:"Failed to send password reset email"})}a.status(200).json({message:"If an account with that email exists, a password reset link has been sent."})}catch(e){console.error("Forgot password error:",e),a.status(500).json({message:"Internal server error"})}}n=(d.then?(await d)():d)[0],s()}catch(e){s(e)}})}};var a=require("../../../webpack-api-runtime.js");a.C(e);var __webpack_exec__=e=>a(a.s=e),t=a.X(0,[222,818],()=>__webpack_exec__(3242));module.exports=t})();