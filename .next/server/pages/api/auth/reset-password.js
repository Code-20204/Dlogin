"use strict";(()=>{var e={};e.id=524,e.ids=[524],e.modules={3524:e=>{e.exports=require("@prisma/client")},8432:e=>{e.exports=require("bcryptjs")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},7037:(e,s,r)=>{r.r(s),r.d(s,{config:()=>p,default:()=>l,routeModule:()=>c});var t={};r.r(t),r.d(t,{default:()=>handler});var a=r(1802),n=r(7153),o=r(6249),i=r(4637),d=r(8432),u=r.n(d);async function handler(e,s){if("POST"!==e.method)return s.status(405).json({message:"Method not allowed"});let{token:r,password:t}=e.body;if(!r||!t)return s.status(400).json({message:"Token and password are required"});if(t.length<6)return s.status(400).json({message:"Password must be at least 6 characters"});try{let e=await i._.user.findFirst({where:{resetToken:r,resetTokenExpiry:{gt:new Date}}});if(!e)return s.status(400).json({message:"Invalid or expired reset token"});let a=u().hashSync(t,12);await i._.user.update({where:{id:e.id},data:{password:a,resetToken:null,resetTokenExpiry:null}}),s.status(200).json({message:"Password reset successfully"})}catch(e){console.error("Reset password error:",e),s.status(500).json({message:"Internal server error"})}}let l=(0,o.l)(t,"default"),p=(0,o.l)(t,"config"),c=new a.PagesAPIRouteModule({definition:{kind:n.x.PAGES_API,page:"/api/auth/reset-password",pathname:"/api/auth/reset-password",bundlePath:"",filename:""},userland:t})},4637:(e,s,r)=>{r.d(s,{_:()=>n});var t=r(3524);let a=globalThis,n=a.prisma??new t.PrismaClient({log:["query"]})}};var s=require("../../../webpack-api-runtime.js");s.C(e);var __webpack_exec__=e=>s(s.s=e),r=s.X(0,[222],()=>__webpack_exec__(7037));module.exports=r})();